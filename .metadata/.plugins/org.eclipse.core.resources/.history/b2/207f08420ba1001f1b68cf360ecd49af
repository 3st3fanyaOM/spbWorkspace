package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.Cliente;
import com.example.demo.service.ClienteService;

@RestController
@RequestMapping("/clientes")
public class ClienteController {

	@Autowired
	private ClienteService servicio;

	@GetMapping
	public ResponseEntity<List<Cliente>> getClientes() {
		List<Cliente> clientes = servicio.getClientes();
		return ResponseEntity.ok(clientes);
	}

	@GetMapping("/{id}")
	public ResponseEntity<Cliente> clientePorId(@PathVariable int id) {
		Cliente c = servicio.clientePorId(id);
		if(c ==null) {
			return ResponseEntity.notFound().build();
		}else {
			return ResponseEntity.ok(c);
		}
	}

	@PostMapping
	public ResponseEntity<Void> addCliente(@RequestBody Cliente cliente) {
		servicio.addCliente(cliente);
		return ResponseEntity.ok().build();
	}
	
	@DeleteMapping("borrar/{id}")
	public ResponseEntity<Void> deleteCliente(@PathVariable int id){
		servicio.deleteCliente(id);
		return ResponseEntity.ok().build();
	}
	
	@PutMapping
	public ResponseEntity<Void> actualizarClienteCompleto(@RequestBody Cliente cliente){
		servicio.actualizarClienteCompleto(cliente);
		return ResponseEntity.ok().build();
	}
	
	@PatchMapping
	public ResponseEntity<Void> actualizarClienteParcial(@RequestBody Cliente cliente){
		servicio.actualizarClienteParcial(cliente);
		return ResponseEntity.ok().build();
	}
	
	@GetMapping("porNombre/{nombre}")
	public ResponseEntity<Cliente> getClientesNombre(@PathVariable String nombre){
		Cliente c = servicio.getClientesNombre(nombre);
		return ResponseEntity.ok(c);
	}
	
}
